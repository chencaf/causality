% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sort.R
\name{sort.causality.graph}
\alias{sort.causality.graph}
\title{Sort the nodes of a acylcic graph}
\usage{
\method{sort}{causality.graph}(x, decreasing = FALSE, ...)
}
\arguments{
\item{x}{causality graph that you wish to calculate the topological
ordering of}

\item{decreasing}{logical value to determine whether or the not sort should
be in decreasing order. default is \code{FALSE}}

\item{...}{additional parameters that can be sent through sort generic}
}
\value{
A charcter vector that contains the nodes of the graph ordered
  according to their topological order. In the event that \code{graph} is
  cyclic, a warning is issued and \code{NA} is returned.
}
\description{
\code{sort} calculates the topological ordering of graph, that is sorts it.
}
\details{
\code{sort.causality.graph} generates a topological ordering of the
  given \code{graph} by using a depth first search as described in CLRS.
  A topological sort (or ordering) is a linear ordering of nodes in a PDAG.
  That is if we have \eqn{x --> y}, then x < y in the sort.
  This ordering is not unique; a PDAG may have multiple valid orderings.
}
\examples{
sort(sachs.dag)

# sort also works with pdags/patterns
sort(as.pattern(sachs.dag))
}
\references{
Cormen, Thomas H., et al. Introduction to Algorithms. The MIT
  Press, 2014.
}
\seealso{
\code{sort} is used in various \code{causality} functions, including
\code{\link{as.dag}}, \code{\link{is.cyclic}}/\code{\link{is.acyclic}}, and
\code{\link{as.pattern}}
}
