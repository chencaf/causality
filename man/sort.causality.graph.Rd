% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dag_to_pattern.R
\name{sort.causality.graph}
\alias{sort.causality.graph}
\title{Get the topological ordering of a dag}
\usage{
\method{sort}{causality.graph}(graph, decreasing = FALSE)
}
\arguments{
\item{dag}{causality dag that you wish to calculate the topological ordering
of}
}
\value{
A charcter vector that contains the nodes of the dag ordered
  according to their topological order. In the event that \code{dag} contains
  a cycle (ie isn't actually a dag) a error is thrown and NA is teturned
}
\description{
\code{topological_order} calculates the topological ordering of dag.
}
\details{
\code{topological_sort} generates a topological ordering of the
  given dag by using a depth first search as described in CLRS. The
  underlying C implementation of this function is used in the function
  \code{\link{dag_to_pattern}} and a slightly different version is used in
  \code{\link{as.dag}}: see below.
}
\note{
This function is designed to get the topological order from a dag, not
  determine whether or not a function is a dag. If you wish to test whether
  or not a cgraph object is a dag or not, use the function
  \code{\link{as.dag}} instead. It performs additional checking on top of
  performing a topological ordering.
}
\examples{
TODO(arix)
}
\references{
Cormen, Thomas H., et al. Introduction to Algorithms. The MIT
  Press, 2014.
}
\seealso{
\code{\link{as.dag}} \code{\link{dag_to_pattern}}
}
